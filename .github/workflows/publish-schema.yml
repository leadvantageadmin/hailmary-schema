name: Publish Schema Version

on:
  push:
    tags:
      - 'schema-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Schema version to publish'
        required: true
        default: 'latest'

jobs:
  publish-schema:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker compose build schema-service

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            VERSION=${GITHUB_REF#refs/tags/schema-}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Validate Schema and Generate Clients
        run: |
          docker compose run --rm schema-service ./scripts/validate-schema.sh ${{ steps.version.outputs.version }}
          docker compose run --rm schema-service ./scripts/generate-clients.sh ${{ steps.version.outputs.version }} all

      - name: Publish Schema Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker compose run --rm -e GITHUB_TOKEN -e GITHUB_REPO schema-service ./scripts/publish.sh ${{ steps.version.outputs.version }}

      - name: Notify Services
        run: |
          echo "ðŸ“¢ Schema version ${{ steps.version.outputs.version }} published successfully!"
          echo "ðŸš€ Services can now pull this version from GitHub releases"
          echo "ðŸ“‹ Release URL: https://github.com/${{ github.repository }}/releases/tag/schema-${{ steps.version.outputs.version }}"